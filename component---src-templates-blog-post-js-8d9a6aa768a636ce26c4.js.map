{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","author","postWriter","data","slug","name","twitter","authors","bio","site","siteMetadata","blogWriter","social","style","display","marginBottom","rhythm","to","minWidth","minHeight","marginRight","overflow","boxShadow","alt","width","height","borderRadius","src","target","rel","href","BlogPostTemplate","render","post","this","props","markdownRemark","siteTitle","title","pageContext","previous","next","tags","frontmatter","location","description","excerpt","marginTop","scale","date","length","className","map","t","toLowerCase","key","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","React","Component","pageQuery"],"mappings":"gLAoFeA,IAtEH,SAAC,GAA+B,IAAD,IAA7BC,OAAQC,OAAqB,MAAR,GAAQ,EACnCC,EAAI,OAaNF,EAAS,CACXG,KAAM,GACNC,KAAM,GACNC,QAAS,IAEX,GAAIC,IAAQL,GACVD,EAAOI,KAAOE,IAAQL,GAAYG,KAClCJ,EAAOG,KAAOF,EACdD,EAAOK,QAAUC,IAAQL,GAAYI,QACrCL,EAAOO,IAAMD,IAAQL,GAAYM,QAC5B,CAAC,IAAD,EACkCL,EAAKM,KAAKC,aAAjCC,EADX,EACGV,OAAoBW,EADvB,EACuBA,OAC5BX,EAAOI,KAAOM,EACdV,EAAOG,KAAO,UACdH,EAAOK,QAAUM,EAAON,QAG1B,OACE,yBACEO,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGvB,kBAAC,IAAD,CACEC,GAAE,WAAahB,EAAOG,KACtBS,MAAO,CACLK,SAAU,GACVC,UAAW,GACXC,YAAaJ,YAAO,IACpBD,aAAc,EACdM,SAAS,SACTC,UAAW,SAGb,yBACEC,IAAKtB,EAAOI,KACZQ,MAAO,CACLW,MAAO,GACPC,OAAO,OACPC,aAAa,QAEfC,IAAG,IAAM1B,EAAOG,KAAb,UAGP,2BACE,gCAASH,EAAOI,MADlB,IACkCJ,EAAOO,IADzC,IAEE,6BACA,uBAAGoB,OAAO,SAASC,IAAI,sBAAsBC,KAAI,uBAAyB7B,EAAOK,SAAjF,IACIL,EAAOK,a,8UCpEbyB,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMhC,KAAKiC,eACvBC,EAAYH,KAAKC,MAAMhC,KAAKM,KAAKC,aAAa4B,MAF7C,EAG0BJ,KAAKC,MAAMI,YAApCC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAAMrC,EAHjB,EAGiBA,KAClBsC,EAAOT,EAAKU,YAAYD,MAAQ,GAEtC,OACE,kBAAC,IAAD,CAAQE,SAAUV,KAAKC,MAAMS,SAAUN,MAAOD,GAC5C,kBAAC,IAAD,CACEC,MAAOL,EAAKU,YAAYL,MACxBO,YAAaZ,EAAKU,YAAYE,aAAeZ,EAAKa,QAClD1C,KAAMA,EACNH,OAAQgC,EAAKU,YAAY1C,SAE3B,iCACE,gCACE,wBACEY,MAAO,CACLkC,UAAW/B,YAAO,GAClBD,aAAc,IAGfkB,EAAKU,YAAYL,OAEpB,uBACEzB,MAAK,iBACAmC,aAAM,IADN,CAEHlC,QAAQ,QACRC,aAAcC,YAAO,MAGtBiB,EAAKU,YAAYM,OAIpBP,EAAKQ,OAAS,GACd,yBAAKC,UAAU,QAEXT,EAAKU,KAAI,SAAAC,GAAC,OAAI,kBAAC,IAAD,CAAOF,UAAU,MAAMlC,GAAE,SAAWoC,EAAEC,cAAiBC,IAAKF,GAAIA,OAIpF,6BAASG,wBAAyB,CAAEC,OAAQxB,EAAKyB,QACjD,wBACE7C,MAAO,CACLE,aAAcC,YAAO,MAGzB,gCACE,kBAAC,IAAD,CAAKf,OAAQgC,EAAKU,YAAY1C,WAIlC,6BACE,wBACEY,MAAO,CACLC,QAAQ,OACR6C,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGtB,GACC,kBAAC,IAAD,CAAMvB,GAAIuB,EAASuB,OAAO3D,KAAMyB,IAAI,QAApC,KACKW,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,IAAD,CAAMxB,GAAIwB,EAAKsB,OAAO3D,KAAMyB,IAAI,QAC7BY,EAAKE,YAAYL,MADpB,W,GAzEe0B,IAAMC,WAqFtBlC,YAER,IAAMmC,EAAS","file":"component---src-templates-blog-post-js-8d9a6aa768a636ce26c4.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nimport { authors } from \"../globals\"\n\nconst Bio = ({author: postWriter = ''}) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  let author = {\n    slug: '',\n    name: '',\n    twitter: ''\n  };\n  if (authors[postWriter]) {\n    author.name = authors[postWriter].name;\n    author.slug = postWriter;\n    author.twitter = authors[postWriter].twitter;\n    author.bio = authors[postWriter].bio;\n  } else {\n    const { author: blogWriter, social } = data.site.siteMetadata;\n    author.name = blogWriter;\n    author.slug = 'trishul';\n    author.twitter = social.twitter;\n  }\n\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Link\n        to={`/author/${author.slug}`}\n        style={{\n          minWidth: 50,\n          minHeight: 50,\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          overflow: `hidden`,\n          boxShadow: 'none'\n        }}\n      >\n        <img\n          alt={author.name}\n          style={{\n            width: 50,\n            height: `auto`,\n            borderRadius: `100%`,\n          }}\n          src={`/${author.slug}.jpg`}\n        />\n      </Link>\n      <p>\n        <strong>{author.name}</strong> {author.bio}.\n        <br/>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://twitter.com/${author.twitter}`}>\n          @{author.twitter}\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"../styles/post.css\";\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next, slug } = this.props.pageContext\n    const tags = post.frontmatter.tags || []\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          slug={slug}\n          author={post.frontmatter.author}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          {\n            tags.length > 0 &&\n            <div className=\"tags\">\n              {\n                tags.map(t => <Link  className=\"tag\" to={`/tags/${t.toLowerCase()}`} key={t}>{t}</Link>)\n              }\n            </div>\n          }\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <footer>\n            <Bio author={post.frontmatter.author} />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n        description,\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}